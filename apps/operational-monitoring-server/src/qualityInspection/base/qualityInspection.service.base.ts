/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  QualityInspection as PrismaQualityInspection,
} from "@prisma/client";

export class QualityInspectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QualityInspectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.qualityInspection.count(args);
  }

  async qualityInspections(
    args: Prisma.QualityInspectionFindManyArgs
  ): Promise<PrismaQualityInspection[]> {
    return this.prisma.qualityInspection.findMany(args);
  }
  async qualityInspection(
    args: Prisma.QualityInspectionFindUniqueArgs
  ): Promise<PrismaQualityInspection | null> {
    return this.prisma.qualityInspection.findUnique(args);
  }
  async createQualityInspection(
    args: Prisma.QualityInspectionCreateArgs
  ): Promise<PrismaQualityInspection> {
    return this.prisma.qualityInspection.create(args);
  }
  async updateQualityInspection(
    args: Prisma.QualityInspectionUpdateArgs
  ): Promise<PrismaQualityInspection> {
    return this.prisma.qualityInspection.update(args);
  }
  async deleteQualityInspection(
    args: Prisma.QualityInspectionDeleteArgs
  ): Promise<PrismaQualityInspection> {
    return this.prisma.qualityInspection.delete(args);
  }
}
