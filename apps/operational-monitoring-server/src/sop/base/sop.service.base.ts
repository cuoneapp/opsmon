/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sop as PrismaSop } from "@prisma/client";

export class SopServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SopCountArgs, "select">): Promise<number> {
    return this.prisma.sop.count(args);
  }

  async sops(args: Prisma.SopFindManyArgs): Promise<PrismaSop[]> {
    return this.prisma.sop.findMany(args);
  }
  async sop(args: Prisma.SopFindUniqueArgs): Promise<PrismaSop | null> {
    return this.prisma.sop.findUnique(args);
  }
  async createSop(args: Prisma.SopCreateArgs): Promise<PrismaSop> {
    return this.prisma.sop.create(args);
  }
  async updateSop(args: Prisma.SopUpdateArgs): Promise<PrismaSop> {
    return this.prisma.sop.update(args);
  }
  async deleteSop(args: Prisma.SopDeleteArgs): Promise<PrismaSop> {
    return this.prisma.sop.delete(args);
  }
}
