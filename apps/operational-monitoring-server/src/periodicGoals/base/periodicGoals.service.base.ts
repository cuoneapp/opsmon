/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PeriodicGoals as PrismaPeriodicGoals } from "@prisma/client";

export class PeriodicGoalsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PeriodicGoalsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.periodicGoals.count(args);
  }

  async periodicGoalsItems(
    args: Prisma.PeriodicGoalsFindManyArgs
  ): Promise<PrismaPeriodicGoals[]> {
    return this.prisma.periodicGoals.findMany(args);
  }
  async periodicGoals(
    args: Prisma.PeriodicGoalsFindUniqueArgs
  ): Promise<PrismaPeriodicGoals | null> {
    return this.prisma.periodicGoals.findUnique(args);
  }
  async createPeriodicGoals(
    args: Prisma.PeriodicGoalsCreateArgs
  ): Promise<PrismaPeriodicGoals> {
    return this.prisma.periodicGoals.create(args);
  }
  async updatePeriodicGoals(
    args: Prisma.PeriodicGoalsUpdateArgs
  ): Promise<PrismaPeriodicGoals> {
    return this.prisma.periodicGoals.update(args);
  }
  async deletePeriodicGoals(
    args: Prisma.PeriodicGoalsDeleteArgs
  ): Promise<PrismaPeriodicGoals> {
    return this.prisma.periodicGoals.delete(args);
  }
}
