/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GoalsAnalytics as PrismaGoalsAnalytics } from "@prisma/client";

export class GoalsAnalyticsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GoalsAnalyticsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.goalsAnalytics.count(args);
  }

  async goalsAnalyticsItems(
    args: Prisma.GoalsAnalyticsFindManyArgs
  ): Promise<PrismaGoalsAnalytics[]> {
    return this.prisma.goalsAnalytics.findMany(args);
  }
  async goalsAnalytics(
    args: Prisma.GoalsAnalyticsFindUniqueArgs
  ): Promise<PrismaGoalsAnalytics | null> {
    return this.prisma.goalsAnalytics.findUnique(args);
  }
  async createGoalsAnalytics(
    args: Prisma.GoalsAnalyticsCreateArgs
  ): Promise<PrismaGoalsAnalytics> {
    return this.prisma.goalsAnalytics.create(args);
  }
  async updateGoalsAnalytics(
    args: Prisma.GoalsAnalyticsUpdateArgs
  ): Promise<PrismaGoalsAnalytics> {
    return this.prisma.goalsAnalytics.update(args);
  }
  async deleteGoalsAnalytics(
    args: Prisma.GoalsAnalyticsDeleteArgs
  ): Promise<PrismaGoalsAnalytics> {
    return this.prisma.goalsAnalytics.delete(args);
  }
}
