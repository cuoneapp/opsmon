/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Meetings as PrismaMeetings } from "@prisma/client";

export class MeetingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MeetingsCountArgs, "select">): Promise<number> {
    return this.prisma.meetings.count(args);
  }

  async meetingsItems(
    args: Prisma.MeetingsFindManyArgs
  ): Promise<PrismaMeetings[]> {
    return this.prisma.meetings.findMany(args);
  }
  async meetings(
    args: Prisma.MeetingsFindUniqueArgs
  ): Promise<PrismaMeetings | null> {
    return this.prisma.meetings.findUnique(args);
  }
  async createMeetings(
    args: Prisma.MeetingsCreateArgs
  ): Promise<PrismaMeetings> {
    return this.prisma.meetings.create(args);
  }
  async updateMeetings(
    args: Prisma.MeetingsUpdateArgs
  ): Promise<PrismaMeetings> {
    return this.prisma.meetings.update(args);
  }
  async deleteMeetings(
    args: Prisma.MeetingsDeleteArgs
  ): Promise<PrismaMeetings> {
    return this.prisma.meetings.delete(args);
  }
}
