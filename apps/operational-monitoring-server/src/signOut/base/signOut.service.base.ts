/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SignOut as PrismaSignOut } from "@prisma/client";

export class SignOutServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SignOutCountArgs, "select">): Promise<number> {
    return this.prisma.signOut.count(args);
  }

  async signOuts(args: Prisma.SignOutFindManyArgs): Promise<PrismaSignOut[]> {
    return this.prisma.signOut.findMany(args);
  }
  async signOut(
    args: Prisma.SignOutFindUniqueArgs
  ): Promise<PrismaSignOut | null> {
    return this.prisma.signOut.findUnique(args);
  }
  async createSignOut(args: Prisma.SignOutCreateArgs): Promise<PrismaSignOut> {
    return this.prisma.signOut.create(args);
  }
  async updateSignOut(args: Prisma.SignOutUpdateArgs): Promise<PrismaSignOut> {
    return this.prisma.signOut.update(args);
  }
  async deleteSignOut(args: Prisma.SignOutDeleteArgs): Promise<PrismaSignOut> {
    return this.prisma.signOut.delete(args);
  }
}
