/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Forms as PrismaForms } from "@prisma/client";

export class FormsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FormsCountArgs, "select">): Promise<number> {
    return this.prisma.forms.count(args);
  }

  async formsItems(args: Prisma.FormsFindManyArgs): Promise<PrismaForms[]> {
    return this.prisma.forms.findMany(args);
  }
  async forms(args: Prisma.FormsFindUniqueArgs): Promise<PrismaForms | null> {
    return this.prisma.forms.findUnique(args);
  }
  async createForms(args: Prisma.FormsCreateArgs): Promise<PrismaForms> {
    return this.prisma.forms.create(args);
  }
  async updateForms(args: Prisma.FormsUpdateArgs): Promise<PrismaForms> {
    return this.prisma.forms.update(args);
  }
  async deleteForms(args: Prisma.FormsDeleteArgs): Promise<PrismaForms> {
    return this.prisma.forms.delete(args);
  }
}
