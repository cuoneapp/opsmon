/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GoalAssignments as PrismaGoalAssignments,
} from "@prisma/client";

export class GoalAssignmentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GoalAssignmentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.goalAssignments.count(args);
  }

  async goalAssignmentsItems(
    args: Prisma.GoalAssignmentsFindManyArgs
  ): Promise<PrismaGoalAssignments[]> {
    return this.prisma.goalAssignments.findMany(args);
  }
  async goalAssignments(
    args: Prisma.GoalAssignmentsFindUniqueArgs
  ): Promise<PrismaGoalAssignments | null> {
    return this.prisma.goalAssignments.findUnique(args);
  }
  async createGoalAssignments(
    args: Prisma.GoalAssignmentsCreateArgs
  ): Promise<PrismaGoalAssignments> {
    return this.prisma.goalAssignments.create(args);
  }
  async updateGoalAssignments(
    args: Prisma.GoalAssignmentsUpdateArgs
  ): Promise<PrismaGoalAssignments> {
    return this.prisma.goalAssignments.update(args);
  }
  async deleteGoalAssignments(
    args: Prisma.GoalAssignmentsDeleteArgs
  ): Promise<PrismaGoalAssignments> {
    return this.prisma.goalAssignments.delete(args);
  }
}
